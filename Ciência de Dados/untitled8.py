# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d7WfWELhQSNeSnDO9GIihHKdRDJm2P71
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer

df = pd.read_csv("diamonds.csv")

print(df.head())

X = df.drop(['carat'], axis=1)

numeric_features = X.select_dtypes(include=['float64', 'int64']).columns
numeric_transformer = StandardScaler()

categorical_features = ['cut', 'color', 'clarity']
categorical_transformer = OneHotEncoder()

preprocessor = ColumnTransformer(
    transformers=[
        ('num', numeric_transformer, numeric_features),
        ('cat', categorical_transformer, categorical_features)])

X_processed = preprocessor.fit_transform(X)

n_clusters = 3

kmeans = KMeans(n_clusters=n_clusters, random_state=42)
kmeans.fit(X_processed)

df['cluster'] = kmeans.labels_

plt.figure(figsize=(10, 6))

for cluster in range(n_clusters):
    cluster_data = df[df['cluster'] == cluster]
    plt.scatter(cluster_data['carat'], cluster_data['price'], label=f'Cluster {cluster}')

plt.title('Clusters de Dados de Diamantes')
plt.xlabel('Carat')
plt.ylabel('Price')
plt.legend()
plt.show()